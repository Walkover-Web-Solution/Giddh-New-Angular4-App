{
  "name": "giddh-workspaces",
  "version": "8.0.8",
  "license": "MIT",
  "scripts": {
    "ng": "ng",
    "start": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng serve web-giddh",
    "build": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=local --sourceMap=false ",
    "build-prod": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=prod --sourceMap=false --output-hashing=all && node tools/web/postbuild --path=dist/apps/web-giddh && npm run rm_bak_files",
    "build-stage": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=stage --sourceMap=false --output-hashing=all && node tools/web/postbuild --path=dist/apps/web-giddh && npm run rm_bak_files",
    "build-test": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=test --sourceMap=false --output-hashing=all && node tools/web/postbuild --path=dist/apps/web-giddh && npm run rm_bak_files",
    "build-dev": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=local --sourceMap=false --output-hashing=all && node tools/web/postbuild --path=dist/apps/web-giddh && npm run rm_bak_files",
    "bundle:report": "source-map-explorer dist/apps/web-giddh-prod/*.js",
    "rm_bak_files": "find dist -name '*.bak' -exec rm -Rf {} \\;",
    "test": "npm run postinstall.web && ng test",
    "lint": "./node_modules/.bin/nx lint && ng lint",
    "e2e": "npm run postinstall.web && ng e2e",
    "affected:apps": "./node_modules/.bin/nx affected:apps",
    "affected:libs": "./node_modules/.bin/nx affected:libs",
    "affected:build": "./node_modules/.bin/nx affected:build",
    "affected:e2e": "./node_modules/.bin/nx affected:e2e ",
    "affected:test": "./node_modules/.bin/nx affected:test",
    "affected:lint": "./node_modules/.bin/nx affected:lint",
    "affected:dep-graph": "./node_modules/.bin/nx affected:dep-graph",
    "affected": "./node_modules/.bin/nx affected",
    "format": "./node_modules/.bin/nx format:write",
    "format:write": "./node_modules/.bin/nx format:write",
    "format:check": "./node_modules/.bin/nx format:check",
    "update": "ng update @nrwl/schematics",
    "update:check": "ng update",
    "workspace-schematic": "./node_modules/.bin/nx workspace-schematic",
    "dep-graph": "./node_modules/.bin/nx dep-graph",
    "help": "./node_modules/.bin/nx help",
    "clean.shared": "cd libs/ && git clean -dfX && cd ../xplat/ && git clean -dfX",
    "clean": "npx rimraf hooks node_modules package-lock.json && npm i",
    "start.web.giddh": "npm run postinstall.web && ng serve web-giddh",
    "postinstall.electron": "node tools/electron/postinstall",
    "postinstall.web": "node tools/web/postinstall",
    "build.electron.giddh": "npm run prepare.electron.giddh && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build electron-giddh --configuration=prod",
    "build.electron.giddh.linux": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --linux",
    "build.electron.giddh.windows": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --windows",
    "build.electron.giddh.mac": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --mac",
    "prepare.electron.giddh": "npm run postinstall.electron && tsc -p apps/electron-giddh/tsconfig.json",
    "serve.electron.giddh.target": "ng serve electron-giddh",
    "serve.electron.giddh": "wait-on http-get://localhost:4200/ && electron apps/electron-giddh/src --serve",
    "start.electron.giddh": "npm run prepare.electron.giddh && npm-run-all -p serve.electron.giddh.target serve.electron.giddh",
    "release": "npm run build.electron.giddh && cd dist/apps/web-giddh && cross-env AWS_ACCESS_KEY_ID=key_id  AWS_SECRET_ACCESS_KEY=access_key npx electron-builder build --config ./../../../electron-sign/electron-builder.json -mwl --x64 --publish always",
    "package": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx  electron-builder build --config ./../../../electron-sign/electron-builder.json  -mw --x64",
    "package:linux": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder  build --config ./../../../electron-sign/electron-builder.json  --linux --x64",
    "package:mac": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx  electron-builder build --config ./../../../electron-sign/electron-builder.json  --macos --x64",
    "package:windows": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --config ./../../../electron-sign/electron-builder.json --win --ia32 --x64 ",
    "package:windows:test": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --config ./../../../electron-sign/electron-builder-test.json --win --ia32 --x64 --publish always",
    "package:mac:test": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --config ./../../../electron-sign/electron-builder-test.json --macos --x64 --publish always",
    "release:windows:ci": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --config ./../../../electron-sign/electron-builder-ci.json --win --ia32 --x64 --publish always",
    "release:mac:ci": "npm run build.electron.giddh && cd dist/apps/web-giddh && npx electron-builder build --config ./../../../electron-sign/electron-builder-ci.json --macos --x64 --publish always",
    "format:code": "npx prettier --write --ignore-unknown .",
    "check:code": "npx prettier --check --ignore-unknown .",
    "cy:ran": "cypress run",
    "cy:verify": "cypress verify",
    "env:run": "npm run print-env && npm run cy:run",
    "env:run:record": "npm run print-env && npm run cy:run -- --record",
    "print-env": "print-env CI && print-env CODESHIP",
    "headTest": "npm run test -- --spec \"cypress/integration/Giddh/*\", --headed",
    "chromeTest": "npm run test -- --browser chrome",
    "recordDashBoardTest": "npm run test -- --record --key fa423514-5a84-42a7-b6a0-b5e7191bba12 --reporter mochawesome",
    "Giddh": "npm run test -- --spec \"cypress/integration/Giddh/*\" ",
    "cy:run": "concurrently \"npm run start\" \"wait-on http-get://localhost:3000 && cypress run --record --key ddaa8e78-116b-428a-9581-0fd63d9fc7be --reporter mochawesome --browser chrome --headless\" --kill-others --success first",
    "cy:open": "concurrently \"npm run start\" \"wait-on http-get://localhost:3000 && npm run cy:open\" --kill-others --success first",
    "cy:run1": "\"cypress run --record --key ddaa8e78-116b-428a-9581-0fd63d9fc7be --reporter mochawesome --browser chrome --headless\"",
    "prepare": "husky install"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^13.3.9",
    "@angular/cdk": "13.3.9",
    "@angular/common": "^13.3.9",
    "@angular/compiler": "13.3.9",
    "@angular/core": "^13.3.9",
    "@angular/forms": "^13.3.9",
    "@angular/http": "7.2.16",
    "@angular/localize": "^13.3.9",
    "@angular/material": "13.3.9",
    "@angular/platform-browser": "^13.3.9",
    "@angular/platform-browser-dynamic": "^13.3.9",
    "@angular/router": "^13.3.9",
    "@getstation/electron-google-oauth2": "^2.1.0",
    "@giddh-workspaces/scss": "file:libs/scss",
    "@giddh-workspaces/web": "file:xplat/web",
    "@ngrx/effects": "13.2.0",
    "@ngrx/router-store": "13.2.0",
    "@ngrx/store": "13.2.0",
    "@ngx-translate/core": "~13.0.0",
    "@ngx-translate/http-loader": "~6.0.0",
    "@nrwl/nx": "7.8.7",
    "angular-resize-event": "3.2.0",
    "angular2-ladda": "^3.1.0",
    "angular2-text-mask": "9.0.0",
    "angular7-ladda": "^2.0.1",
    "bootstrap-daterangepicker": "3.1.0",
    "configstore": "5.0.1",
    "core-js": "3.6.5",
    "dayjs": "^1.11.4",
    "dexie": "3.0.2",
    "fast-clean": "^1.2.1",
    "file-saver": "2.0.2",
    "highcharts": "^8.2.0",
    "highcharts-angular": "^2.7.0",
    "intl-tel-input": "^17.0.16",
    "is-cidr": "^4.0.0",
    "jquery": "3.5.1",
    "json-tree-viewer": "0.0.2",
    "jsondiffpatch": "^0.4.1",
    "jspdf": "1.5.3",
    "jspdf-autotable": "3.5.6",
    "libphonenumber-js": "^1.7.57",
    "ng-click-outside": "7.0.0",
    "ng-connection-service": "1.0.4",
    "ng-thermal-print": "^1.0.3",
    "ng2-ckeditor": "1.2.9",
    "ng2-order-pipe": "0.1.5",
    "ng2-search-filter": "0.5.1",
    "ng2-ui-auth": "10.0.1",
    "ngrx-store-localstorage": "9.0.0",
    "ngrx-store-logger": "0.2.2",
    "ngx-bootstrap": "^5.6.1",
    "ngx-bootstrap-switch": "0.0.3",
    "ngx-clipboard": "13.0.1",
    "ngx-font-picker": "^9.0.0",
    "ngx-lightbox": "2.4.1",
    "ngx-perfect-scrollbar": "^9.0.0",
    "ngx-quicklink": "^0.2.6",
    "ngx-toastr": "13.0.0",
    "ngx-uploader": "11.0.0",
    "node": "16.13.2",
    "path-browserify": "^1.0.1",
    "print-js": "^1.6.0",
    "qz-tray": "^2.2.1",
    "reflect-metadata": "0.1.12",
    "reselect": "4.0.0",
    "rxjs": "6.5.5",
    "tslib": "^2.0.1",
    "uuid": "^8.3.0",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "13.1.0",
    "@angular-devkit/build-angular": "13.3.9",
    "@angular/cli": "13.3.9",
    "@angular/compiler-cli": "13.3.9",
    "@angular/language-service": "^13.3.9",
    "@ngrx/store-devtools": "13.2.0",
    "@nrwl/schematics": "8.12.11",
    "@nstudio/schematics": "13.4.3",
    "@types/file-saver": "2.0.1",
    "@types/highcharts": "7.0.0",
    "@types/jasmine": "3.6.11",
    "@types/jasminewd2": "~2.0.3",
    "@types/jquery": "3.5.1",
    "@types/jspdf": "1.3.3",
    "@types/node": "16.11.7",
    "codelyzer": "6.0.2",
    "compression-webpack-plugin": "^8.0.0",
    "concurrently": "^5.3.0",
    "cross-env": "^7.0.2",
    "cypress": "^6.0.0",
    "cypress-intellij-reporter": "0.0.4",
    "cypress-xpath": "^1.6.0",
    "dotenv": "^10.0.0",
    "electron": "^13.1.6",
    "electron-builder": "^22.11.7",
    "electron-installer-dmg": "3.0.0",
    "electron-is-dev": "1.2.0",
    "electron-log": "4.2.2",
    "electron-notarize": "^1.0.0",
    "electron-oauth": "git+https://github.com/govi2010/electron-oauth2.git",
    "electron-packager": "15.0.0",
    "electron-rebuild": "1.11.0",
    "electron-reload": "1.5.0",
    "electron-store": "6.0.0",
    "electron-updater": "4.3.4",
    "html-webpack-plugin": "5.3.1",
    "http-server": "0.12.3",
    "husky": "^7.0.1",
    "jasmine-core": "3.6.0",
    "jasmine-marbles": "0.6.0",
    "jasmine-spec-reporter": "5.0.2",
    "js-yaml": "3.14.0",
    "karma": "6.3.4",
    "karma-chrome-launcher": "3.1.0",
    "karma-coverage-istanbul-reporter": "3.0.3",
    "karma-jasmine": "4.0.1",
    "karma-jasmine-html-reporter": "1.6.0",
    "lint-staged": "^11.1.1",
    "mocha": "^5.2.0",
    "mochawesome": "^4.0.1",
    "movefiles": "1.0.1",
    "ngrx-store-freeze": "0.2.4",
    "ngx-build-plus": "13.0.1",
    "npm-run-all": "4.1.5",
    "npx": "10.2.2",
    "prettier": "2.3.2",
    "protractor": "7.0.0",
    "ts-node": "10.9.1",
    "tslint": "6.1.3",
    "typescript": "^4.6.4",
    "wait-on": "^5.3.0",
    "zlib": "^1.0.5"
  },
  "xplat": {
    "prefix": "foo"
  },
  "lint-staged": {
    "*.{html,scss}": "npx prettier --write --ignore-unknown"
  }
}
