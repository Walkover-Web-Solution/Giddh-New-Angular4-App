{
    "name": "giddh-workspaces",
    "version": "7.0.1",
    "license": "MIT",
    "scripts": {
        "ng": "ng",
        "start": "npm run postinstall.web && ng serve web-giddh",
        "build": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=local --sourceMap=false ",
        "build-prod": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=prod --sourceMap=false --output-hashing=all --extract-css=true && node tools/web/postbuild --path=dist/apps/web-giddh-prod && npm run rm_bak_files",
        "build-stage": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=stage --sourceMap=false --output-hashing=all --extract-css=true && node tools/web/postbuild --path=dist/apps/web-giddh-stage && npm run rm_bak_files",
        "build-test": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=test --sourceMap=false --output-hashing=all --extract-css=true && node tools/web/postbuild --path=dist/apps/web-giddh-test && npm run rm_bak_files",
        "build-dev": "npm run postinstall.web && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build web-giddh --configuration=local --sourceMap=false --output-hashing=all --extract-css=true && node tools/web/postbuild --path=dist/apps/web-giddh-local && npm run rm_bak_files",
        "rm_bak_files": "find dist -name '*.bak' -exec rm -Rf {} \\;",
        "test": "npm run postinstall.web && ng test",
        "lint": "./node_modules/.bin/nx lint && ng lint",
        "e2e": "npm run postinstall.web && ng e2e",
        "affected:apps": "./node_modules/.bin/nx affected:apps",
        "affected:libs": "./node_modules/.bin/nx affected:libs",
        "affected:build": "./node_modules/.bin/nx affected:build",
        "affected:e2e": "./node_modules/.bin/nx affected:e2e ",
        "affected:test": "./node_modules/.bin/nx affected:test",
        "affected:lint": "./node_modules/.bin/nx affected:lint",
        "affected:dep-graph": "./node_modules/.bin/nx affected:dep-graph",
        "affected": "./node_modules/.bin/nx affected",
        "format": "./node_modules/.bin/nx format:write",
        "format:write": "./node_modules/.bin/nx format:write",
        "format:check": "./node_modules/.bin/nx format:check",
        "update": "ng update @nrwl/schematics",
        "update:check": "ng update",
        "workspace-schematic": "./node_modules/.bin/nx workspace-schematic",
        "dep-graph": "./node_modules/.bin/nx dep-graph",
        "help": "./node_modules/.bin/nx help",
        "clean.shared": "cd libs/ && git clean -dfX && cd ../xplat/ && git clean -dfX",
        "clean": "npx rimraf hooks node_modules package-lock.json && npm i",
        "start.web.giddh": "npm run postinstall.web && ng serve web-giddh",
        "postinstall.electron": "node tools/electron/postinstall",
        "postinstall.web": "node tools/web/postinstall",
        "build.cordova.prod": "node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build giddh-cordova --configuration=prod",
        "build.cordova.stage": "node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build giddh-cordova --configuration=stage",
        "build.electron.giddh": "npm run prepare.electron.giddh && node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build electron-giddh --configuration=prod",
        "build.electron.giddh.linux": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx electron-builder build --linux",
        "build.electron.giddh.windows": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx electron-builder build --windows",
        "build.electron.giddh.mac": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx electron-builder build --mac",
        "prepare.electron.giddh": "npm run postinstall.electron && tsc -p apps/electron-giddh/tsconfig.json",
        "serve.electron.giddh.target": "ng serve electron-giddh",
        "serve.electron.giddh": "wait-on http-get://localhost:4200/ && electron apps/electron-giddh/src --serve",
        "start.electron.giddh": "npm run prepare.electron.giddh && npm-run-all -p serve.electron.giddh.target serve.electron.giddh",
        "serve.cordova.giddh": "wait-on http-get://localhost:3000/ && electron apps/electron-giddh/src --serve",
        "start.cordova.giddh.android": " npm run postinstall.web   && npm run serve:cordova:web ",
        "serve:cordova:web": " ng serve giddh-cordova",
        "serve:cordova:android": "http-server ./platforms/android/platform_www",
        "cordova:android": "cd ./apps/giddh-cordova/giddh && cordova run android",
        "start.cordova.giddh.ios": "npm run postinstall.web && ng serve giddh-cordova && cd ./apps/giddh-cordova/giddh && cordova run android && http-server ./platforms/ios/platform_www",
        "release": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && cross-env AWS_ACCESS_KEY_ID=key_id  AWS_SECRET_ACCESS_KEY=access_key npx electron-builder build --config ./../../../electron-sign/electron-builder.json -mwl --x64 --publish always",
        "package": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx  electron-builder build --config ./../../../electron-sign/electron-builder.json  -mw --x64",
        "package:linux": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx electron-builder  build --config ./../../../electron-sign/electron-builder.json  --linux --x64",
        "package:mac": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && npx  electron-builder build --config ./../../../electron-sign/electron-builder.json  --macos --x64",
        "package:windows": "npm run build.electron.giddh && cd dist/apps/web-giddh-prod && cross-env AWS_ACCESS_KEY_ID=key_id AWS_SECRET_ACCESS_KEY=access_key npx electron-builder build  --config ./../../../electron-sign/electron-builder.json --win --ia32 --x64 "
    },
    "private": true,
    "dependencies": {
        "@angular/animations": "^8.2.8",
        "@angular/common": "^8.2.8",
        "@angular/compiler": "^8.2.8",
        "@angular/core": "^8.2.8",
        "@angular/forms": "^8.2.8",
        "@angular/http": "^7.2.15",
        "@angular/platform-browser": "^8.2.8",
        "@angular/platform-browser-dynamic": "^8.2.8",
        "@angular/router": "^8.2.8",
        "@getstation/electron-google-oauth2": "^2.0.0",
        "@giddh-workspaces/scss": "file:libs/scss",
        "@giddh-workspaces/web": "file:xplat/web",
        "@ionic-native/core": "^5.17.0",
        "@ionic-native/file-chooser": "^5.17.0",
        "@ionic-native/file-picker": "5.17.0",
        "@ionic-native/file-transfer": "5.17.0",
        "@ionic-native/user-agent": "^5.21.5",
        "@ng-bootstrap/ng-bootstrap": "^5.3.1",
        "@ngrx/effects": "^8.6.0",
        "@ngrx/router-store": "^8.6.0",
        "@ngrx/store": "^8.6.0",
        "@ngx-translate/core": "~11.0.0",
        "@ngx-translate/http-loader": "~4.0.0",
        "@nrwl/nx": "7.6.2",
        "angular-resize-event": "^1.2.2",
        "angular2-highcharts": "git+https://github.com/mtflynn/angular2-highcharts.git",
        "angular2-ladda": "^2.0.0",
        "angular2-text-mask": "^9.0.0",
        "bootstrap-daterangepicker": "2.1.25",
        "configstore": "^5.0.1",
        "core-js": "^2.5.4",
        "dexie": "^2.0.4",
        "electron-notarize": "^0.2.1",
        "file-saver": "^1.3.8",
        "google-libphonenumber": "^3.2.6",
        "is-cidr": "^2.0.6",
        "jquery": "^3.4.1",
        "jspdf": "1.3.3",
        "jspdf-autotable": "2.3.2",
        "moment": "^2.22.2",
        "ng-click-outside": "^4.0.0",
        "ng-contenteditable": "^2.0.2",
        "ng2-order-pipe": "^0.1.5",
        "ng2-pdfjs-viewer": "^5.0.1",
        "ng2-search-filter": "^0.4.7",
        "ng2-ui-auth": "^9.0.0",
        "ngrx-store-localstorage": "^8.0.0",
        "ngrx-store-logger": "^0.2.4",
        "ngx-bootstrap": "~3.0.1",
        "ngx-clipboard": "^11.1.7",
        "ngx-connection-service": "^7.0.3",
        "ngx-font-picker": "^6.5.0",
        "ngx-perfect-scrollbar": "^6.3.1",
        "ngx-toastr": "^9.0.2",
        "ngx-uploader": "^8.0.0",
        "node-sass": "^4.13.0",
        "reflect-metadata": "^0.1.12",
        "reselect": "^3.0.1",
        "rxjs": "6.6.2",
        "zone.js": "^0.9.1"
    },
    "devDependencies": {
        "@angular/cdk": "^8.2.3",
        "@angular-devkit/build-angular": "^0.800.1",
        "@angular-builders/custom-webpack": "^8.3.0",
        "@angular/cli": "8.1.1",
        "@angular/compiler-cli": "^8.2.8",
        "@angular/language-service": "^8.2.8",
        "@ngrx/store-devtools": "^8.6.0",
        "@nrwl/angular": "^10.0.10",
        "@nrwl/schematics": "8.12.11",
        "@nstudio/schematics": "^7.3.6",
        "@types/file-saver": "^1.3.0",
        "@types/highcharts": "5.0.4",
        "@types/jasmine": "~2.8.6",
        "@types/jasminewd2": "~2.0.3",
        "@types/jquery": "^3.3.6",
        "@types/jspdf": "^1.1.31",
        "@types/node": "^10.3.5",
        "codelyzer": "~4.5.0",
        "cross-env": "^5.2.0",
        "dotenv": "6.2.0",
        "electron": "7.1.7",
        "electron-builder": "^22.8.1",
        "electron-installer-dmg": "3.0.0",
        "electron-is-dev": "1.1.0",
        "electron-log": "4.0.2",
        "electron-oauth": "git+https://github.com/govi2010/electron-oauth2.git",
        "electron-packager": "^15.0.0",
        "electron-rebuild": "1.8.8",
        "electron-reload": "1.5.0",
        "electron-store": "5.1.0",
        "electron-updater": "4.2.0",
        "html-webpack-plugin": "^3.2.0",
        "http-server": "^0.12.1",
        "jasmine-core": "~2.99.1",
        "jasmine-marbles": "0.4.0",
        "jasmine-spec-reporter": "~4.2.1",
        "js-yaml": "^3.13.1",
        "karma": "^5.1.1",
        "karma-chrome-launcher": "~2.2.0",
        "karma-coverage-istanbul-reporter": "~2.0.1",
        "karma-jasmine": "~1.1.0",
        "karma-jasmine-html-reporter": "^0.2.2",
        "movefiles": "^1.0.1",
        "ngrx-store-freeze": "0.2.4",
        "ngx-build-plus": "^8.1.5",
        "npm-run-all": "^4.1.5",
        "npx": "10.2.0",
        "prettier": "1.15.2",
        "protractor": "^7.0.0",
        "ts-node": "~7.0.0",
        "tslint": "~5.11.0",
        "typescript": "~3.4.5",
        "wait-on": "~3.2.0"
    },
    "xplat": {
        "prefix": "foo"
    }
}
