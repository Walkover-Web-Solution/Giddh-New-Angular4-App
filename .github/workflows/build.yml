# This is a basic workflow to help you get started with Actions

name: UI TEST build

# Controls when the action will run.
on:
  push:
    branches: [ giddh-2.0, beta-stage, beta-branch, production ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
concurrency: test-build
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - if: ${{steps.extract_branch.outputs.branch == 'giddh-2.0'}}
        run: |
          export BUILD_ENV=TEST
          echo "::set-env name=BUILD_ENV::$BUILD_ENV"
      - if: ${{steps.extract_branch.outputs.branch == 'beta-stage'}}
        run: |
          export BUILD_ENV=STAGE
          echo "::set-env name=BUILD_ENV::$BUILD_ENV"
      - if: ${{steps.extract_branch.outputs.branch == 'beta-branch'}}
        run: |
          export BUILD_ENV=BETA
          echo "::set-env name=BUILD_ENV::$BUILD_ENV"
      - if: ${{steps.extract_branch.outputs.branch == 'production'}}
        run: |
          export BUILD_ENV=PROD
          echo "::set-env name=BUILD_ENV::$BUILD_ENV"
      - run: echo $BUILD_ENV
      # Runs a single command to install Node
      - name: Install Node.js & NPM
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      # Runs npm i
#       - uses: bahmutov/npm-install@v1
#         env:
#           CYPRESS_INSTALL_BINARY: 0
#         with:
#           useLockFile: false
#           useRollingCache: true
#           working-directory: .
#       - name: Creating bundle
#         run: npm run build-test
#       - name: Copy folder
#         run: |
#           mkdir public
#           cp -r /home/runner/work/Giddh-New-Angular4-App/Giddh-New-Angular4-App/dist/apps/web-giddh-test /home/runner/work/Giddh-New-Angular4-App/Giddh-New-Angular4-App/public/website/
#       - name: Create ZIP folder
#         run:
#           zip -r public.zip public
#       - name: Deploy
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: |
#           aws s3 cp \
#             --acl private \
#             --region ap-south-1 \
#             /home/runner/work/Giddh-New-Angular4-App/Giddh-New-Angular4-App/public.zip s3://${{ secrets.UI_TEST_BUILD_S3_FOLDER }}
      - name: Slack Notification Success
        if: ${{ job.status == 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.PROFILE_ID }}
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'red' or '#ff00ff'
          SLACK_TITLE: Giddh UI $BUILD_ENV build
          SLACK_USERNAME: Giddh UI $BUILD_ENV build
          SLACK_MESSAGE: Build succeeded
          SLACK_FOOTER: ''
          SLACK_ICON: https://drive.google.com/file/d/1qrhagyky1_X9OHmNvSQJPb0LSC4Uc0UO/view?usp=sharing
      - name: Slack Notification Failure
        if: ${{ job.status == 'failure' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.PROFILE_ID }}
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'red' or '#ff00ff'
          SLACK_TITLE: Giddh UI $BUILD_ENV build
          SLACK_USERNAME: Giddh UI $BUILD_ENV build
          SLACK_MESSAGE: Build failed
          SLACK_FOOTER: ''
          SLACK_ICON: https://drive.google.com/file/d/1qrhagyky1_X9OHmNvSQJPb0LSC4Uc0UO/view?usp=sharing
      - name: Slack Notification Cancelled
        if: ${{ job.status == 'cancelled' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.PROFILE_ID }}
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'red' or '#ff00ff'
          SLACK_TITLE: Giddh UI $BUILD_ENV build
          SLACK_USERNAME: Giddh UI $BUILD_ENV build
          SLACK_MESSAGE: Build cancelled
          SLACK_FOOTER: ''
          SLACK_ICON: https://drive.google.com/file/d/1qrhagyky1_X9OHmNvSQJPb0LSC4Uc0UO/view?usp=sharing
