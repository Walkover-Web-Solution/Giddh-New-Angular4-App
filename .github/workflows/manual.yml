# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Card details'
        # Default value if no value is explicitly provided
        default: 'Electron build'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Node.js & NPM
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
        with:
          useLockFile: false
          useRollingCache: true
          working-directory: .
      - uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          useRollingCache: true
          working-directory: ./apps/electron-giddh/src/
      - name: Update app version in root package
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: './package.json'
          key: 'version'
          value: ${{ secrets.APP_VERSION }} + 1
      - name: Update app version in sub-package
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: './apps/electron-giddh/src/package.json'
          key: 'version'
          value: ${{ secrets.APP_VERSION }} + 1
      - name: Store current app version
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: 'APP_VERSION'
          value: ${{ secrets.APP_VERSION }} + 1
          repository: hmanzur/actions-set-secret
          token: ${{ secrets.github_token }}
      - name: Preparing build bundle
        run: npm run build.electron.giddh
      - if: ${{ matrix.os == 'macos-latest' }}
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          release: true
      - if: ${{ matrix.os == 'windows-latest' }}
        uses: samuelmeuli/action-electron-builder@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          github_token: ${{ secrets.github_token }}
          release: true
          skip_build: true
          args: --config ./electron-sign/electron-builder-test.json --ia32 --x64
