# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      card:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Card details"
        # Default value if no value is explicitly provided
        default: "Electron build"
        # Input has to be provided for the workflow to run
        required: true
      version:
        description: "App version"
        default: "8.0.8"
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Node.js & NPM
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
        with:
          useLockFile: false
          useRollingCache: true
          working-directory: .
      - uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          useRollingCache: true
          working-directory: ./apps/electron-giddh/src/
      - name: Update app version in root package
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: "./package.json"
          key: "version"
          value: ${{ github.event.inputs.version }}
      - name: Update app version in sub-package
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: "./apps/electron-giddh/src/package.json"
          key: "version"
          value: ${{ github.event.inputs.version }}
      - name: Creating Electron bundle
        run: npm run package:windows:test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  notify-success:
    if: ${{ success() }}
    needs: release
    name: Slack Notification Success
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.PROFILE_ID }}
          SLACK_COLOR: "#009688" # or a specific color like 'green' or '#ff00ff'
          SLACK_MESSAGE: "Build download URL https://giddh-app-builds-test.s3.ap-south-1.amazonaws.com/giddh+Setup+${{ github.event.inputs.version }}.exe"
          SLACK_TITLE: Giddh Electron build
          SLACK_USERNAME: Giddh Electron build
          SLACK_ICON: https://drive.google.com/file/d/1qrhagyky1_X9OHmNvSQJPb0LSC4Uc0UO/view?usp=sharing
  notify-failure:
    if: ${{ failure() }}
    needs: release
    name: Slack Notification Failure
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.PROFILE_ID }}
          SLACK_COLOR: "#f44336" # or a specific color like 'green' or '#ff00ff'
          SLACK_MESSAGE: "Build failed"
          SLACK_TITLE: Giddh Electron build
          SLACK_USERNAME: Giddh Electron build
          SLACK_ICON: https://drive.google.com/file/d/1qrhagyky1_X9OHmNvSQJPb0LSC4Uc0UO/view?usp=sharing
