{"version":3,"file":"AppUpdater.js","sourceRoot":"","sources":["AppUpdater.ts"],"names":[],"mappings":";;AAAA,qDAA+C;AAE/C,IAAI,OAAO,CAAC;AACZ;IAGI;QAAA,iBA0BC;QA5BM,uBAAkB,GAAY,KAAK,CAAC;QAGvC,IAAM,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;QACpC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACpC,8BAAW,CAAC,MAAM,GAAG,GAAG,CAAC;QACzB,8BAAW,CAAC,wBAAwB,EAAE,CAAC;QACvC,8BAAW,CAAC,EAAE,CAAC,kBAAkB,EAAE;YAC/B,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,KAAK,GAAG,8BAA8B,CAAC;gBAC/C,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;aAC3B;YACD,8BAAW,CAAC,cAAc,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,8BAAW,CAAC,EAAE,CAAC,sBAAsB,EAAE;YACnC,IAAI,OAAO,EAAE;gBACT,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;gBACvB,OAAO,GAAG,IAAI,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;QAEH,8BAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE;YAChC,UAAU,CAAC;gBACP,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YACnC,CAAC,EAAE,KAAK,CAAC,CAAC;QAEd,CAAC,CAAC,CAAC;IAEP,CAAC;IACL,mBAAC;AAAD,CAAC,AA9BD,IA8BC;;AAED,SAAgB,eAAe,CAAC,QAAQ,EAAE,aAAa,EAAE,KAAK;IAC1D,OAAO,GAAG,QAAQ,CAAC;IACnB,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;IACxB,8BAAW,CAAC,eAAe,EAAE,CAAC;AAClC,CAAC;AAJD,0CAIC","sourcesContent":["import { autoUpdater } from 'electron-updater';\r\n\r\nlet updater;\r\nexport default class AppUpdaterV1 {\r\n    public isUpdateDownloaded: boolean = false;\r\n\r\n    constructor() {\r\n        const log = require('electron-log');\r\n        log.transports.file.level = 'debug';\r\n        autoUpdater.logger = log;\r\n        autoUpdater.checkForUpdatesAndNotify();\r\n        autoUpdater.on('update-available', () => {\r\n            if (updater) {\r\n                updater.label = 'Downloading updates. . . . .';\r\n                updater.enabled = false;\r\n            }\r\n            autoUpdater.downloadUpdate();\r\n        });\r\n        autoUpdater.on('update-not-available', () => {\r\n            if (updater) {\r\n                updater.enabled = true;\r\n                updater = null;\r\n            }\r\n        });\r\n\r\n        autoUpdater.on('update-downloaded', () => {\r\n            setTimeout(() => {\r\n                this.isUpdateDownloaded = true;\r\n            }, 60000);\r\n\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport function checkForUpdates(menuItem, focusedWindow, event) {\r\n    updater = menuItem;\r\n    updater.enabled = false;\r\n    autoUpdater.checkForUpdates();\r\n}\r\n"]}