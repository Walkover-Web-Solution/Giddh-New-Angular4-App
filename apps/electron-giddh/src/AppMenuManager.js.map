{"version":3,"file":"AppMenuManager.js","sourceRoot":"","sources":["AppMenuManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { app, BrowserWindow, Menu, MenuItemConstructorOptions } from 'electron';\r\n\r\nimport { checkForUpdates } from './AppUpdater';\r\nimport WindowManager from './WindowManager';\r\n\r\nexport default function setMenu() {\r\n    const windowsMenu: MenuItemConstructorOptions = {\r\n        label: 'Window',\r\n        role: 'window',\r\n        submenu: [\r\n            {\r\n                label: 'New Window',\r\n                accelerator: 'CmdOrCtrl+N',\r\n                click: (menuItem, browserWindow: BrowserWindow, event) => {\r\n                    const windowManager = new WindowManager();\r\n                    windowManager.openWindows();\r\n                }\r\n            },\r\n            {\r\n                label: 'Minimize',\r\n                accelerator: 'CmdOrCtrl+M',\r\n                role: 'minimize'\r\n            },\r\n            {\r\n                label: 'Close',\r\n                accelerator: 'CmdOrCtrl+W',\r\n                role: 'close'\r\n            },\r\n            {\r\n                label: 'Check For Update',\r\n                accelerator: 'CmdOrCtrl+U',\r\n                click: (item: any, focusedWindow: any, event) => {\r\n                    //\r\n                    checkForUpdates(item, focusedWindow, event);\r\n                }\r\n            },\r\n        ]\r\n    };\r\n\r\n    const name = app.getName();\r\n    const template: MenuItemConstructorOptions[] = [\r\n        {\r\n            label: 'Edit',\r\n            submenu: [\r\n                {\r\n                    label: 'Undo',\r\n                    accelerator: 'CmdOrCtrl+Z',\r\n                    role: 'undo'\r\n                },\r\n                {\r\n                    label: 'Redo',\r\n                    accelerator: 'Shift+CmdOrCtrl+Z',\r\n                    role: 'redo'\r\n                },\r\n                {\r\n                    type: 'separator'\r\n                },\r\n                {\r\n                    label: 'Cut',\r\n                    accelerator: 'CmdOrCtrl+X',\r\n                    role: 'cut'\r\n                },\r\n                {\r\n                    label: 'Copy',\r\n                    accelerator: 'CmdOrCtrl+C',\r\n                    role: 'copy'\r\n                },\r\n                {\r\n                    label: 'Paste',\r\n                    accelerator: 'CmdOrCtrl+V',\r\n                    role: 'paste'\r\n                },\r\n                {\r\n                    label: 'Select All',\r\n                    accelerator: 'CmdOrCtrl+A',\r\n                    role: 'selectall'\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            label: 'View',\r\n            submenu: [\r\n                {\r\n                    label: 'Reload',\r\n                    accelerator: 'CmdOrCtrl+R',\r\n                    click: (item: any, focusedWindow: any) => {\r\n                        if (focusedWindow != null) {\r\n                            focusedWindow.reload();\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Enter Full Screen',\r\n                    accelerator: process.platform === 'darwin' ? 'Ctrl+Command+F' : 'F11',\r\n                    click: (item: any, focusedWindow: any) => {\r\n                        if (focusedWindow) {\r\n                            focusedWindow.setFullScreen(!focusedWindow.isFullScreen());\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Open Dev Tool',\r\n                    accelerator: 'Command+I',\r\n                    click: (item: any, focusedWindow: any) => {\r\n                        if (focusedWindow != null) {\r\n                            focusedWindow.webContents.openDevTools();\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        windowsMenu\r\n    ];\r\n\r\n    if (process.platform === 'darwin') {\r\n        template.unshift({\r\n            label: name,\r\n            submenu: [\r\n                {\r\n                    label: 'About ' + name,\r\n                    role: 'about'\r\n                },\r\n                {\r\n                    type: 'separator'\r\n                },\r\n                {\r\n                    label: 'Hide ' + name,\r\n                    accelerator: 'Command+H',\r\n                    role: 'hide'\r\n                },\r\n                {\r\n                    label: 'Hide Others',\r\n                    accelerator: 'Command+Shift+H',\r\n                    role: 'hideothers'\r\n                },\r\n                {\r\n                    label: 'Show All',\r\n                    role: 'unhide'\r\n                },\r\n                {\r\n                    type: 'separator'\r\n                },\r\n                {\r\n                    label: 'Quit',\r\n                    accelerator: 'Command+Q',\r\n                    click: () => {\r\n                        app.quit();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        ((windowsMenu.submenu) as MenuItemConstructorOptions[]).push(\r\n            {\r\n                type: 'separator'\r\n            },\r\n            {\r\n                label: 'Bring All to Front',\r\n                role: 'front'\r\n            });\r\n    }\r\n\r\n    const appMenu = Menu.buildFromTemplate(template);\r\n    Menu.setApplicationMenu(appMenu);\r\n}\r\n"]}